# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# A headless service to create DNS records.
apiVersion: v1
kind: ConfigMap
metadata:
  name: bootstrap-script
data:
  start-history-server.sh: |
    #!/bin/bash
    $HADOOP_PREFIX/bin/mapred --config $HADOOP_CONF_DIR historyserver
---
apiVersion: v1
kind: Service
metadata:
  name: hadoop-hisotry-server-web
  labels:
    app: hadoop-hisotry-server-web
spec:
  type: NodePort
  ports:
  - port: 19888
    nodePort: 30988
    name: webui
  selector:
    app: hadoop-hisotry-server
---
apiVersion: v1
kind: Service
metadata:
  name: hadoop-hisotry-server
  labels:
    app: hadoop-hisotry-server
spec:
  ports:
  - port: 19888
    name: webui
  clusterIP: None
  selector:
    app: hadoop-hisotry-server
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: hadoop-hisotry-server
spec:
  serviceName: "hadoop-hisotry-server"
  # Create a size-1 set. The namenode DNS name will be
  # hdfs-namenode-0.hdfs-namenode.default.svc.YOUR-CLUSTER-DOMAIN
  replicas: 1
  selector:
    matchLabels:
      app: hadoop-hisotry-server
  template:
    metadata:
      labels:
        app: hadoop-hisotry-server
    spec:
      # Use hostNetwork so datanodes connect to namenode without going through an overlay network
      # like weave. Otherwise, namenode fails to see physical IP address of datanodes.
      hostNetwork: true
      hostPID: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: hadoop-hisotry-server
          image: xingtanzjr/hadoop-base:2.7.5
          args:
            - "/bin/bash"
            - "/bootscript/start-history-server.sh"
            - "-d"
          env:
            - name: CORE_CONF_fs_defaultFS
              value: hdfs://hdfs-namenode-0.hdfs-namenode.{{.Release.Namespace}}.svc.cluster.local:8020
            - name: YARN_CONF_yarn_nodemanager_aux___services
              value: mapreduce_shuffle
            - name: YARN_CONF_yarn_resourcemanager_hostname
              value: yarn-rm-0.yarn-rm.{{.Release.Namespace}}.svc.cluster.local
            - name: CLUSTER_NAME
              value: hdfs-k8s
            - name: YARN_CONF_yarn_nodemanager_resource_memory___mb
              value: "6144"
            - name: YARN_CONF_yarn_scheduler_minimum___allocation___mb
              value: "512"
            - name: YARN_CONF_yarn_scheduler_maximum___allocation___mb
              value: "6144"
            - name: YARN_CONF_yarn_nodemanager_vmem___check___enabled
              value: "false"
            - name: YARN_CONF_yarn_log___aggregation___enable
              value: "true"
            - name: YARN_CONF_yarn_log_server_url
              value: http://yarn-rm-0.yarn-rm.{{.Release.Namespace}}.svc.cluster.local:19888/jobhistory/logs
          ports:
          - containerPort: 19888
            name: webui
          volumeMounts:
          - name: bootscript
            mountPath: /bootscript
      volumes:
      - name: bootscript
        configMap:
          name: bootstrap-script
      nodeSelector:
        yarn-rm-selector: yarn-rm-0
      restartPolicy: Always
